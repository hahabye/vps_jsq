name: Publish Docker image latest

on:
  push:
    branches: [ "main" ]
    paths:
      - 'dist/**'
  workflow_dispatch:

env:
  GHCR_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  push_to_registry:
    name: Push Docker image to registries
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          #platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          tags: |
            ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest
          build-args: |
            GIT_COMMIT=${{ github.sha }}
            GIT_TAG=${{ github.ref_name }}
            GIT_REPOSITORY=${{ github.repository }}

      - name: Build finished message
        run: |
          echo -e "=== Build Finished ===\n\
          Usage:\n\
          docker pull ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}:latest\n\
          docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest"

      #- name: send Message To me
      #  run: |
      #    curl -X POST -H "Content-Type: application/json" -d '{"source":"github-ci:vps_jsq","message":"Build finishedã€‚\nversion: ${{ github.ref_name }}" }' ${{ secrets.WEBHOOK_URL }}